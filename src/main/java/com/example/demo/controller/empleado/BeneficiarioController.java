package com.example.demo.controller.empleado;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.demo.dao.BeneficiarioRepository;
import com.example.demo.dao.EmpleadoRepository;
import com.example.demo.model.Beneficiario;
import com.example.demo.model.Empleado;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/beneficiario") // This means URL's start with /Beneficiario (after Application path)
public class BeneficiarioController {
  @Autowired // This means to get the bean called BeneficiarioRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private BeneficiarioRepository beneficiarioRepository;

  @Autowired // This means to get the bean called BeneficiarioRepository
  // Which is auto-generated by Spring, we will use it to handle the data
  private EmpleadoRepository empleadoRepository;

  @PostMapping(path = "/add/{idempleado}") // Map ONLY POST Requests
  public @ResponseBody String addNewBeneficiario(@PathVariable int idempleado,
      @RequestParam String fullname,
      @RequestParam String apPaterno,
      @RequestParam String apMaterno,
      @RequestParam String sexo,
      @RequestParam Integer edad, @RequestParam Integer tipoRelacion) {

    Beneficiario n = new Beneficiario();
    n.setNombre(fullname);
    n.setApPaterno(apPaterno);
    n.setApMaterno(apMaterno);
    n.setSexo(sexo);
    n.setEdad(edad);
    n.setTipoRelacion(tipoRelacion);
    Empleado e = empleadoRepository.findById(idempleado).get();
    n.setEmpleado(e);
    beneficiarioRepository.save(n);
    return "Saved";
  }

  @GetMapping("/onehql/{id}")
  public @ResponseBody Optional<Beneficiario> getByIdHQL(@PathVariable int id) {
    // This returns a JSON or XML with the users
    return beneficiarioRepository.findByIdHQL(id);
  }

  @GetMapping(path = "/all")
  public @ResponseBody Iterable<Beneficiario> getAllBeneficiarios() {
    // This returns a JSON or XML with the users
    return beneficiarioRepository.findAll();
  }

  @GetMapping(path = "/allhql")
  public @ResponseBody Iterable<Beneficiario> getAllBYHQL() {
    // This returns a JSON or XML with the users
    return beneficiarioRepository.findAllByHQL();
  }
}